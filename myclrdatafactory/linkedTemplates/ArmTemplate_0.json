{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myclrdatafactory"
		},
		"LS_AZURE_SQL_DATABASE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZURE_SQL_DATABASE'"
		},
		"LS_BLOBSTORE_MYCLRBLOBSTORE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOBSTORE_MYCLRBLOBSTORE'"
		},
		"LS_DataLakeStoreGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_DataLakeStoreGen2'"
		},
		"clradlsgen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'clradlsgen2'"
		},
		"LS_ONPREM_SQL_INSPIRON_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ONPREM_SQL_INSPIRON'"
		},
		"LS_DataLakeStoreGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://myclrgen2.dfs.core.windows.net"
		},
		"clradlsgen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://clradlsgen2.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZURE_SQL_DATABASE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZURE_SQL_DATABASE_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOBSTORE_MYCLRBLOBSTORE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOBSTORE_MYCLRBLOBSTORE_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DataLakeStoreGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_DataLakeStoreGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_DataLakeStoreGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/clradlsgen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('clradlsgen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('clradlsgen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS-ONPREM-SQL-CHINNU')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseExternal_ControlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "External control table to store high water mark value.",
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_DATABASE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseExternal_ControlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The external control table is used to store the partition list of data source tables.",
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_DATABASE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseExternal_ControlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The external control table is used to store the partition list of data source tables.",
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_DATABASE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_ADF_CONFIG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_DATABASE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceType",
						"type": "varchar"
					},
					{
						"name": "SchemaName",
						"type": "varchar"
					},
					{
						"name": "SourceTableName",
						"type": "varchar"
					},
					{
						"name": "FilterQuery",
						"type": "varchar"
					},
					{
						"name": "WaterMarkColumn",
						"type": "varchar"
					},
					{
						"name": "WaterMarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ADF_Config"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_DEST_TABLES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_DATABASE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOBSTORE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOBSTORE_MYCLRBLOBSTORE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DEST_FOLDERNAME": {
						"type": "string"
					},
					"DEST_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DEST_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DEST_FOLDERNAME",
							"type": "Expression"
						},
						"container": "adffiles"
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOBSTORE_MYCLRBLOBSTORE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "LS_DataLakeStoreGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Data_Destination_Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Data_Destination_Container}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLakeStoreGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataDestination1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.",
				"linkedServiceName": {
					"referenceName": "LS_BLOBSTORE_MYCLRBLOBSTORE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Data_Destination_Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Data_Destination_Container}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOBSTORE_MYCLRBLOBSTORE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ONPREM_SQL_INSPIRON')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_ONPREM_SQL_INSPIRON_connectionString')]"
				},
				"connectVia": {
					"referenceName": "LS-ONPREM-SQL-CHINNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/LS-ONPREM-SQL-CHINNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_SQL_INSPIRON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ONPREM_SQL_INSPIRON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_MAX_SOURCE_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_SQL_INSPIRON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ONPREM_SQL_INSPIRON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_SQL_INSPIRON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataSourceTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ONPREM_SQL_INSPIRON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataSource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data source store.",
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_SQL_INSPIRON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ONPREM_SQL_INSPIRON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataSource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data source store.",
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_SQL_INSPIRON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ONPREM_SQL_INSPIRON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BulkCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy huge amount of data in bulk from database using external control table to store source table list with partitions for each table.\n\nWhen you want to migrate data from your data warehouse like Oracle server, Netezza server, Teradata server or SQL Server to Azure, you have to load huge amount of data from multiple tables in data sources. In most cases, data has to be further partitioned in each table so that you can load rows with multiple threads in parallel from single table.",
				"activities": [
					{
						"name": "GetPartitionList",
						"description": "Lookup activity to retrieve the list of partitions stored in the external control table.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select @{pipeline().parameters.Control_Table_Schema_PartitionID} as PartitionID, @{pipeline().parameters.Control_Table_Schema_SourceTableName} as SourceTableName, @{pipeline().parameters.Control_Table_Schema_FilterQuery} as FilterQuery from @{pipeline().parameters.Control_Table_Name}",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseExternal_ControlTable2",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Control_Table_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachPartition",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetPartitionList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetPartitionList').output.value",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "CopyOnePartition",
									"description": "Copy activity to copy each partition from source database store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "@item().FilterQuery",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "SqlServerDataSource2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DataDestination1",
											"type": "DatasetReference",
											"parameters": {
												"Data_Destination_Container": {
													"value": "@pipeline().parameters.Data_Destination_Container",
													"type": "Expression"
												},
												"Data_Destination_Directory": {
													"value": "@pipeline().parameters.Data_Destination_Directory",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Control_Table_Name": {
						"type": "String"
					},
					"Control_Table_Schema_PartitionID": {
						"type": "String"
					},
					"Control_Table_Schema_SourceTableName": {
						"type": "String"
					},
					"Control_Table_Schema_FilterQuery": {
						"type": "String"
					},
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-01-20T19:01:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseExternal_ControlTable2')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerDataSource2')]",
				"[concat(variables('factoryId'), '/datasets/DataDestination1')]"
			]
		}
	]
}